---
name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: connect-iot-bv/connectmq

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: Dockerfile
            suffix: ""
            platforms: linux/amd64,linux/arm64
          - dockerfile: Dockerfile.alpine
            suffix: "-alpine"
            platforms: linux/amd64,linux/arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            suffix=${{ matrix.suffix }},onlatest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{ matrix.dockerfile }}
          platforms: ${{ matrix.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test image (AMD64 only)
        if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
        run: |
          docker buildx build \
            --file ./${{ matrix.dockerfile }} \
            --platform linux/amd64 \
            --load \
            --tag test-image:latest \
            .
          
          # Test container startup
          docker run --rm -d --name connectmq-test \
            -e "DOCKER_VERNEMQ_ALLOW_ANONYMOUS=on" \
            test-image:latest
          
          # Wait for startup
          sleep 10
          
          # Test health check
          docker exec connectmq-test vernemq ping | grep -q pong
          
          # Cleanup
          docker stop connectmq-test